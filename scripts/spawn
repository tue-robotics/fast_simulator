#!/usr/bin/env python
import roslib; roslib.load_manifest('fast_simulator')
import rospy
import sys, getopt

from fast_simulator import client

def print_usage(exit_code = 0):
    print "Usage: spawn -i <object-id> -m <model-name> [ -x <x-pos> -y <y-pos> -z <z-pos> -X <x-rot> -Y <y-rot> -Z <z-rot>"   
    sys.exit(exit_code)

if __name__ == "__main__":

    try:
        opts, args = getopt.gnu_getopt(sys.argv[1:], "hx:y:z:X:Y:Z:m:i:", [])
    except getopt.GetoptError, err:
        print str(err)
        print_usage(2)

    model_name = None
    obj_id = None
    x = 0
    y = 0
    z = 0
    rx = 0
    ry = 0
    rz = 0

    for o, a in opts:
        if o == '-h':
            print_usage(0)
        elif o == '-x':
            x = float(a)
        elif o == '-y':
            y = float(a)
        elif o == '-z':
            z = float(a)
        elif o == '-X':
            rx = float(a)
        elif o == '-Y':
            ry = float(a)
        elif o == '-Z':
            rz = float(a)
        elif o == '-m':
            model_name = a
        elif o == '-i':
            obj_id = a

    if not model_name or not obj_id:
        print "Please specify the model name (-m) and object ID (-i)"
        print ""
        print_usage(2)

    rospy.init_node('fast_simulator_spawner')

    print "Spawning " + obj_id + " (" + model_name + ")"

    W = client.SimWorld()
    obj = W.add_object(obj_id, model_name, x, y, z)
    obj.set_position(x, y, z, rx, ry, rz)

    #person1 = W.add_object("person-1", "person", 1, -4, 0)    
    #person2 = W.add_object("person-2", "person", 3, -4, 0)    
    #person3 = W.add_object("person-3", "person", 2, -1, 0)    
    #person4 = W.add_object("person-4", "person", 4, -4, 0) 
